{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs26 \cf0 import turtle\
import random\
\'a0\
w = 500\
h = 500\
food_size = 10\
delay = 100\
\'a0\
offsets = \{\
\'a0\'a0\'a0\'a0"up": (0, 20),\
\'a0\'a0\'a0\'a0"down": (0, -20),\
\'a0\'a0\'a0\'a0"left": (-20, 0),\
\'a0\'a0\'a0\'a0"right": (20, 0)\
\}\
\'a0\
def reset():\
\'a0\'a0\'a0\'a0global snake, snake_dir, food_position, pen\
\'a0\'a0\'a0\'a0snake = [[0, 0], [0, 20], [0, 40], [0, 60], [0, 80]]\
\'a0\'a0\'a0\'a0snake_dir = "up"\
\'a0\'a0\'a0\'a0food_position = get_random_food_position()\
\'a0\'a0\'a0\'a0food.goto(food_position)\
\'a0\'a0\'a0\'a0move_snake()\
\'a0\'a0\'a0\'a0\'a0\
def move_snake():\
\'a0\'a0\'a0\'a0global snake_dir\
\'a0\
\'a0\'a0\'a0\'a0new_head = snake[-1].copy()\
\'a0\'a0\'a0\'a0new_head[0] = snake[-1][0] + offsets[snake_dir][0]\
\'a0\'a0\'a0\'a0new_head[1] = snake[-1][1] + offsets[snake_dir][1]\
\'a0\
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0if new_head in snake[:-1]:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0reset()\
\'a0\'a0\'a0\'a0else:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake.append(new_head)\
\'a0\
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0if not food_collision():\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake.pop(0)\
\'a0\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0if snake[-1][0] > w / 2:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake[-1][0] -= w\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0elif snake[-1][0] < - w / 2:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake[-1][0] += w\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0elif snake[-1][1] > h / 2:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake[-1][1] -= h\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0elif snake[-1][1] < -h / 2:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake[-1][1] += h\
\'a0\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0pen.clearstamps()\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0for segment in snake:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0pen.goto(segment[0], segment[1])\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0pen.stamp()\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0screen.update()\
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0turtle.ontimer(move_snake, delay)\
\'a0\
def food_collision():\
\'a0\'a0\'a0\'a0global food_position\
\'a0\'a0\'a0\'a0if get_distance(snake[-1], food_position) < 20:\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0food_position = get_random_food_position()\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0food.goto(food_position)\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return True\
\'a0\'a0\'a0\'a0return False\
\'a0\
def get_random_food_position():\
\'a0\'a0\'a0\'a0x = random.randint(- w / 2 + food_size, w / 2 - food_size)\
\'a0\'a0\'a0\'a0y = random.randint(- h / 2 + food_size, h / 2 - food_size)\
\'a0\'a0\'a0\'a0return (x, y)\
\'a0\
def get_distance(pos1, pos2):\
\'a0\'a0\'a0\'a0x1, y1 = pos1\
\'a0\'a0\'a0\'a0x2, y2 = pos2\
\'a0\'a0\'a0\'a0distance = ((y2 - y1) ** 2 + (x2 - x1) ** 2) ** 0.5\
\'a0\'a0\'a0\'a0return distance\
def go_up():\
\'a0\'a0\'a0\'a0global snake_dir\
\'a0\'a0\'a0\'a0if snake_dir != "down":\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake_dir = "up"\
\'a0\
def go_right():\
\'a0\'a0\'a0\'a0global snake_dir\
\'a0\'a0\'a0\'a0if snake_dir != "left":\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake_dir = "right"\
\'a0\
def go_down():\
\'a0\'a0\'a0\'a0global snake_dir\
\'a0\'a0\'a0\'a0if snake_dir!= "up":\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake_dir = "down"\
\'a0\
def go_left():\
\'a0\'a0\'a0\'a0global snake_dir\
\'a0\'a0\'a0\'a0if snake_dir != "right":\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0snake_dir = "left"\
\'a0\
\'a0\
screen = turtle.Screen()\
screen.setup(w, h)\
screen.title("Snake")\
screen.bgcolor("#00B2EE")\
screen.setup(500, 500)\
screen.tracer(0)\
\'a0\
\'a0\
pen = turtle.Turtle("square")\
pen.penup()\
\'a0\
\'a0\
food = turtle.Turtle()\
food.shape("square")\
food.color("yellow")\
food.shapesize(food_size / 20)\
food.penup()\
\'a0\
\'a0\
screen.listen()\
screen.onkey(go_up, "Up")\
screen.onkey(go_right, "Right")\
screen.onkey(go_down, "Down")\
screen.onkey(go_left, "Left")\
\'a0\
\'a0\
reset()\
turtle.done()\
\
}